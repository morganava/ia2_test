/*** Autogenerated by WIDL 3.20 from /home/pospeselr/Code/Tor/tor-browser/other-licenses/ia2/Accessible2_3.idl - Do not edit ***/

#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif

#include <rpc.h>
#include <rpcndr.h>

#ifndef COM_NO_WINDOWS_H
#include <windows.h>
#include <ole2.h>
#endif

#ifndef __accessible2_3_h__
#define __accessible2_3_h__

/* Forward declarations */

#ifndef __IAccessible2_3_FWD_DEFINED__
#define __IAccessible2_3_FWD_DEFINED__
typedef interface IAccessible2_3 IAccessible2_3;
#ifdef __cplusplus
interface IAccessible2_3;
#endif /* __cplusplus */
#endif

/* Headers for imported files */

#include <objidl.h>
#include <oaidl.h>
#include <oleacc.h>
#include <Accessible2_2.h>

#ifdef __cplusplus
extern "C" {
#endif

typedef struct IA2Range {
    IUnknown *anchor;
    LONG anchorOffset;
    IUnknown *active;
    LONG activeOffset;
} IA2Range;
/*****************************************************************************
 * IAccessible2_3 interface
 */
#ifndef __IAccessible2_3_INTERFACE_DEFINED__
#define __IAccessible2_3_INTERFACE_DEFINED__

DEFINE_GUID(IID_IAccessible2_3, 0x5be18059, 0x762e, 0x4e73, 0x94,0x76, 0xab,0xa2,0x94,0xfe,0xd4,0x11);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("5be18059-762e-4e73-9476-aba294fed411")
IAccessible2_3 : public IAccessible2_2
{
    virtual HRESULT STDMETHODCALLTYPE get_selectionRanges(
        IA2Range **ranges,
        LONG *nRanges) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(IAccessible2_3, 0x5be18059, 0x762e, 0x4e73, 0x94,0x76, 0xab,0xa2,0x94,0xfe,0xd4,0x11)
#endif
#else
typedef struct IAccessible2_3Vtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        IAccessible2_3 *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        IAccessible2_3 *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        IAccessible2_3 *This);

    /*** IDispatch methods ***/
    HRESULT (STDMETHODCALLTYPE *GetTypeInfoCount)(
        IAccessible2_3 *This,
        UINT *pctinfo);

    HRESULT (STDMETHODCALLTYPE *GetTypeInfo)(
        IAccessible2_3 *This,
        UINT iTInfo,
        LCID lcid,
        ITypeInfo **ppTInfo);

    HRESULT (STDMETHODCALLTYPE *GetIDsOfNames)(
        IAccessible2_3 *This,
        REFIID riid,
        LPOLESTR *rgszNames,
        UINT cNames,
        LCID lcid,
        DISPID *rgDispId);

    HRESULT (STDMETHODCALLTYPE *Invoke)(
        IAccessible2_3 *This,
        DISPID dispIdMember,
        REFIID riid,
        LCID lcid,
        WORD wFlags,
        DISPPARAMS *pDispParams,
        VARIANT *pVarResult,
        EXCEPINFO *pExcepInfo,
        UINT *puArgErr);

    /*** IAccessible methods ***/
    HRESULT (STDMETHODCALLTYPE *get_accParent)(
        IAccessible2_3 *This,
        IDispatch **ppdispParent);

    HRESULT (STDMETHODCALLTYPE *get_accChildCount)(
        IAccessible2_3 *This,
        LONG *pcountChildren);

    HRESULT (STDMETHODCALLTYPE *get_accChild)(
        IAccessible2_3 *This,
        VARIANT varChildID,
        IDispatch **ppdispChild);

    HRESULT (STDMETHODCALLTYPE *get_accName)(
        IAccessible2_3 *This,
        VARIANT varID,
        BSTR *pszName);

    HRESULT (STDMETHODCALLTYPE *get_accValue)(
        IAccessible2_3 *This,
        VARIANT varID,
        BSTR *pszValue);

    HRESULT (STDMETHODCALLTYPE *get_accDescription)(
        IAccessible2_3 *This,
        VARIANT varID,
        BSTR *pszDescription);

    HRESULT (STDMETHODCALLTYPE *get_accRole)(
        IAccessible2_3 *This,
        VARIANT varID,
        VARIANT *pvarRole);

    HRESULT (STDMETHODCALLTYPE *get_accState)(
        IAccessible2_3 *This,
        VARIANT varID,
        VARIANT *pvarState);

    HRESULT (STDMETHODCALLTYPE *get_accHelp)(
        IAccessible2_3 *This,
        VARIANT varID,
        BSTR *pszHelp);

    HRESULT (STDMETHODCALLTYPE *get_accHelpTopic)(
        IAccessible2_3 *This,
        BSTR *pszHelpFile,
        VARIANT varID,
        LONG *pidTopic);

    HRESULT (STDMETHODCALLTYPE *get_accKeyboardShortcut)(
        IAccessible2_3 *This,
        VARIANT varID,
        BSTR *pszKeyboardShortcut);

    HRESULT (STDMETHODCALLTYPE *get_accFocus)(
        IAccessible2_3 *This,
        VARIANT *pvarID);

    HRESULT (STDMETHODCALLTYPE *get_accSelection)(
        IAccessible2_3 *This,
        VARIANT *pvarID);

    HRESULT (STDMETHODCALLTYPE *get_accDefaultAction)(
        IAccessible2_3 *This,
        VARIANT varID,
        BSTR *pszDefaultAction);

    HRESULT (STDMETHODCALLTYPE *accSelect)(
        IAccessible2_3 *This,
        LONG flagsSelect,
        VARIANT varID);

    HRESULT (STDMETHODCALLTYPE *accLocation)(
        IAccessible2_3 *This,
        LONG *pxLeft,
        LONG *pyTop,
        LONG *pcxWidth,
        LONG *pcyHeight,
        VARIANT varID);

    HRESULT (STDMETHODCALLTYPE *accNavigate)(
        IAccessible2_3 *This,
        LONG navDir,
        VARIANT varStart,
        VARIANT *pvarEnd);

    HRESULT (STDMETHODCALLTYPE *accHitTest)(
        IAccessible2_3 *This,
        LONG xLeft,
        LONG yTop,
        VARIANT *pvarID);

    HRESULT (STDMETHODCALLTYPE *accDoDefaultAction)(
        IAccessible2_3 *This,
        VARIANT varID);

    HRESULT (STDMETHODCALLTYPE *put_accName)(
        IAccessible2_3 *This,
        VARIANT varID,
        BSTR pszName);

    HRESULT (STDMETHODCALLTYPE *put_accValue)(
        IAccessible2_3 *This,
        VARIANT varID,
        BSTR pszValue);

    /*** IAccessible2 methods ***/
    HRESULT (STDMETHODCALLTYPE *get_nRelations)(
        IAccessible2_3 *This,
        LONG *nRelations);

    HRESULT (STDMETHODCALLTYPE *get_relation)(
        IAccessible2_3 *This,
        LONG relationIndex,
        IAccessibleRelation **relation);

    HRESULT (STDMETHODCALLTYPE *get_relations)(
        IAccessible2_3 *This,
        LONG maxRelations,
        IAccessibleRelation **relations,
        LONG *nRelations);

    HRESULT (STDMETHODCALLTYPE *role)(
        IAccessible2_3 *This,
        LONG *role);

    HRESULT (STDMETHODCALLTYPE *scrollTo)(
        IAccessible2_3 *This,
        enum IA2ScrollType scrollType);

    HRESULT (STDMETHODCALLTYPE *scrollToPoint)(
        IAccessible2_3 *This,
        enum IA2CoordinateType coordinateType,
        LONG x,
        LONG y);

    HRESULT (STDMETHODCALLTYPE *get_groupPosition)(
        IAccessible2_3 *This,
        LONG *groupLevel,
        LONG *similarItemsInGroup,
        LONG *positionInGroup);

    HRESULT (STDMETHODCALLTYPE *get_states)(
        IAccessible2_3 *This,
        AccessibleStates *states);

    HRESULT (STDMETHODCALLTYPE *get_extendedRole)(
        IAccessible2_3 *This,
        BSTR *extendedRole);

    HRESULT (STDMETHODCALLTYPE *get_localizedExtendedRole)(
        IAccessible2_3 *This,
        BSTR *localizedExtendedRole);

    HRESULT (STDMETHODCALLTYPE *get_nExtendedStates)(
        IAccessible2_3 *This,
        LONG *nExtendedStates);

    HRESULT (STDMETHODCALLTYPE *get_extendedStates)(
        IAccessible2_3 *This,
        LONG maxExtendedStates,
        BSTR **extendedStates,
        LONG *nExtendedStates);

    HRESULT (STDMETHODCALLTYPE *get_localizedExtendedStates)(
        IAccessible2_3 *This,
        LONG maxLocalizedExtendedStates,
        BSTR **localizedExtendedStates,
        LONG *nLocalizedExtendedStates);

    HRESULT (STDMETHODCALLTYPE *get_uniqueID)(
        IAccessible2_3 *This,
        LONG *uniqueID);

    HRESULT (STDMETHODCALLTYPE *get_windowHandle)(
        IAccessible2_3 *This,
        HWND *windowHandle);

    HRESULT (STDMETHODCALLTYPE *get_indexInParent)(
        IAccessible2_3 *This,
        LONG *indexInParent);

    HRESULT (STDMETHODCALLTYPE *get_locale)(
        IAccessible2_3 *This,
        IA2Locale *locale);

    HRESULT (STDMETHODCALLTYPE *get_attributes)(
        IAccessible2_3 *This,
        BSTR *attributes);

    /*** IAccessible2_2 methods ***/
    HRESULT (STDMETHODCALLTYPE *get_attribute)(
        IAccessible2_3 *This,
        BSTR name,
        VARIANT *attribute);

    HRESULT (STDMETHODCALLTYPE *get_accessibleWithCaret)(
        IAccessible2_3 *This,
        IUnknown **accessible,
        LONG *caretOffset);

    HRESULT (STDMETHODCALLTYPE *get_relationTargetsOfType)(
        IAccessible2_3 *This,
        BSTR type,
        LONG maxTargets,
        IUnknown ***targets,
        LONG *nTargets);

    /*** IAccessible2_3 methods ***/
    HRESULT (STDMETHODCALLTYPE *get_selectionRanges)(
        IAccessible2_3 *This,
        IA2Range **ranges,
        LONG *nRanges);

    END_INTERFACE
} IAccessible2_3Vtbl;

interface IAccessible2_3 {
    CONST_VTBL IAccessible2_3Vtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define IAccessible2_3_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define IAccessible2_3_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IAccessible2_3_Release(This) (This)->lpVtbl->Release(This)
/*** IDispatch methods ***/
#define IAccessible2_3_GetTypeInfoCount(This,pctinfo) (This)->lpVtbl->GetTypeInfoCount(This,pctinfo)
#define IAccessible2_3_GetTypeInfo(This,iTInfo,lcid,ppTInfo) (This)->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo)
#define IAccessible2_3_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) (This)->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)
#define IAccessible2_3_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) (This)->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
/*** IAccessible methods ***/
#define IAccessible2_3_get_accParent(This,ppdispParent) (This)->lpVtbl->get_accParent(This,ppdispParent)
#define IAccessible2_3_get_accChildCount(This,pcountChildren) (This)->lpVtbl->get_accChildCount(This,pcountChildren)
#define IAccessible2_3_get_accChild(This,varChildID,ppdispChild) (This)->lpVtbl->get_accChild(This,varChildID,ppdispChild)
#define IAccessible2_3_get_accName(This,varID,pszName) (This)->lpVtbl->get_accName(This,varID,pszName)
#define IAccessible2_3_get_accValue(This,varID,pszValue) (This)->lpVtbl->get_accValue(This,varID,pszValue)
#define IAccessible2_3_get_accDescription(This,varID,pszDescription) (This)->lpVtbl->get_accDescription(This,varID,pszDescription)
#define IAccessible2_3_get_accRole(This,varID,pvarRole) (This)->lpVtbl->get_accRole(This,varID,pvarRole)
#define IAccessible2_3_get_accState(This,varID,pvarState) (This)->lpVtbl->get_accState(This,varID,pvarState)
#define IAccessible2_3_get_accHelp(This,varID,pszHelp) (This)->lpVtbl->get_accHelp(This,varID,pszHelp)
#define IAccessible2_3_get_accHelpTopic(This,pszHelpFile,varID,pidTopic) (This)->lpVtbl->get_accHelpTopic(This,pszHelpFile,varID,pidTopic)
#define IAccessible2_3_get_accKeyboardShortcut(This,varID,pszKeyboardShortcut) (This)->lpVtbl->get_accKeyboardShortcut(This,varID,pszKeyboardShortcut)
#define IAccessible2_3_get_accFocus(This,pvarID) (This)->lpVtbl->get_accFocus(This,pvarID)
#define IAccessible2_3_get_accSelection(This,pvarID) (This)->lpVtbl->get_accSelection(This,pvarID)
#define IAccessible2_3_get_accDefaultAction(This,varID,pszDefaultAction) (This)->lpVtbl->get_accDefaultAction(This,varID,pszDefaultAction)
#define IAccessible2_3_accSelect(This,flagsSelect,varID) (This)->lpVtbl->accSelect(This,flagsSelect,varID)
#define IAccessible2_3_accLocation(This,pxLeft,pyTop,pcxWidth,pcyHeight,varID) (This)->lpVtbl->accLocation(This,pxLeft,pyTop,pcxWidth,pcyHeight,varID)
#define IAccessible2_3_accNavigate(This,navDir,varStart,pvarEnd) (This)->lpVtbl->accNavigate(This,navDir,varStart,pvarEnd)
#define IAccessible2_3_accHitTest(This,xLeft,yTop,pvarID) (This)->lpVtbl->accHitTest(This,xLeft,yTop,pvarID)
#define IAccessible2_3_accDoDefaultAction(This,varID) (This)->lpVtbl->accDoDefaultAction(This,varID)
#define IAccessible2_3_put_accName(This,varID,pszName) (This)->lpVtbl->put_accName(This,varID,pszName)
#define IAccessible2_3_put_accValue(This,varID,pszValue) (This)->lpVtbl->put_accValue(This,varID,pszValue)
/*** IAccessible2 methods ***/
#define IAccessible2_3_get_nRelations(This,nRelations) (This)->lpVtbl->get_nRelations(This,nRelations)
#define IAccessible2_3_get_relation(This,relationIndex,relation) (This)->lpVtbl->get_relation(This,relationIndex,relation)
#define IAccessible2_3_get_relations(This,maxRelations,relations,nRelations) (This)->lpVtbl->get_relations(This,maxRelations,relations,nRelations)
#define IAccessible2_3_role(This,role) (This)->lpVtbl->role(This,role)
#define IAccessible2_3_scrollTo(This,scrollType) (This)->lpVtbl->scrollTo(This,scrollType)
#define IAccessible2_3_scrollToPoint(This,coordinateType,x,y) (This)->lpVtbl->scrollToPoint(This,coordinateType,x,y)
#define IAccessible2_3_get_groupPosition(This,groupLevel,similarItemsInGroup,positionInGroup) (This)->lpVtbl->get_groupPosition(This,groupLevel,similarItemsInGroup,positionInGroup)
#define IAccessible2_3_get_states(This,states) (This)->lpVtbl->get_states(This,states)
#define IAccessible2_3_get_extendedRole(This,extendedRole) (This)->lpVtbl->get_extendedRole(This,extendedRole)
#define IAccessible2_3_get_localizedExtendedRole(This,localizedExtendedRole) (This)->lpVtbl->get_localizedExtendedRole(This,localizedExtendedRole)
#define IAccessible2_3_get_nExtendedStates(This,nExtendedStates) (This)->lpVtbl->get_nExtendedStates(This,nExtendedStates)
#define IAccessible2_3_get_extendedStates(This,maxExtendedStates,extendedStates,nExtendedStates) (This)->lpVtbl->get_extendedStates(This,maxExtendedStates,extendedStates,nExtendedStates)
#define IAccessible2_3_get_localizedExtendedStates(This,maxLocalizedExtendedStates,localizedExtendedStates,nLocalizedExtendedStates) (This)->lpVtbl->get_localizedExtendedStates(This,maxLocalizedExtendedStates,localizedExtendedStates,nLocalizedExtendedStates)
#define IAccessible2_3_get_uniqueID(This,uniqueID) (This)->lpVtbl->get_uniqueID(This,uniqueID)
#define IAccessible2_3_get_windowHandle(This,windowHandle) (This)->lpVtbl->get_windowHandle(This,windowHandle)
#define IAccessible2_3_get_indexInParent(This,indexInParent) (This)->lpVtbl->get_indexInParent(This,indexInParent)
#define IAccessible2_3_get_locale(This,locale) (This)->lpVtbl->get_locale(This,locale)
#define IAccessible2_3_get_attributes(This,attributes) (This)->lpVtbl->get_attributes(This,attributes)
/*** IAccessible2_2 methods ***/
#define IAccessible2_3_get_attribute(This,name,attribute) (This)->lpVtbl->get_attribute(This,name,attribute)
#define IAccessible2_3_get_accessibleWithCaret(This,accessible,caretOffset) (This)->lpVtbl->get_accessibleWithCaret(This,accessible,caretOffset)
#define IAccessible2_3_get_relationTargetsOfType(This,type,maxTargets,targets,nTargets) (This)->lpVtbl->get_relationTargetsOfType(This,type,maxTargets,targets,nTargets)
/*** IAccessible2_3 methods ***/
#define IAccessible2_3_get_selectionRanges(This,ranges,nRanges) (This)->lpVtbl->get_selectionRanges(This,ranges,nRanges)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT IAccessible2_3_QueryInterface(IAccessible2_3* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG IAccessible2_3_AddRef(IAccessible2_3* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG IAccessible2_3_Release(IAccessible2_3* This) {
    return This->lpVtbl->Release(This);
}
/*** IDispatch methods ***/
static FORCEINLINE HRESULT IAccessible2_3_GetTypeInfoCount(IAccessible2_3* This,UINT *pctinfo) {
    return This->lpVtbl->GetTypeInfoCount(This,pctinfo);
}
static FORCEINLINE HRESULT IAccessible2_3_GetTypeInfo(IAccessible2_3* This,UINT iTInfo,LCID lcid,ITypeInfo **ppTInfo) {
    return This->lpVtbl->GetTypeInfo(This,iTInfo,lcid,ppTInfo);
}
static FORCEINLINE HRESULT IAccessible2_3_GetIDsOfNames(IAccessible2_3* This,REFIID riid,LPOLESTR *rgszNames,UINT cNames,LCID lcid,DISPID *rgDispId) {
    return This->lpVtbl->GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId);
}
static FORCEINLINE HRESULT IAccessible2_3_Invoke(IAccessible2_3* This,DISPID dispIdMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pDispParams,VARIANT *pVarResult,EXCEPINFO *pExcepInfo,UINT *puArgErr) {
    return This->lpVtbl->Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr);
}
/*** IAccessible methods ***/
static FORCEINLINE HRESULT IAccessible2_3_get_accParent(IAccessible2_3* This,IDispatch **ppdispParent) {
    return This->lpVtbl->get_accParent(This,ppdispParent);
}
static FORCEINLINE HRESULT IAccessible2_3_get_accChildCount(IAccessible2_3* This,LONG *pcountChildren) {
    return This->lpVtbl->get_accChildCount(This,pcountChildren);
}
static FORCEINLINE HRESULT IAccessible2_3_get_accChild(IAccessible2_3* This,VARIANT varChildID,IDispatch **ppdispChild) {
    return This->lpVtbl->get_accChild(This,varChildID,ppdispChild);
}
static FORCEINLINE HRESULT IAccessible2_3_get_accName(IAccessible2_3* This,VARIANT varID,BSTR *pszName) {
    return This->lpVtbl->get_accName(This,varID,pszName);
}
static FORCEINLINE HRESULT IAccessible2_3_get_accValue(IAccessible2_3* This,VARIANT varID,BSTR *pszValue) {
    return This->lpVtbl->get_accValue(This,varID,pszValue);
}
static FORCEINLINE HRESULT IAccessible2_3_get_accDescription(IAccessible2_3* This,VARIANT varID,BSTR *pszDescription) {
    return This->lpVtbl->get_accDescription(This,varID,pszDescription);
}
static FORCEINLINE HRESULT IAccessible2_3_get_accRole(IAccessible2_3* This,VARIANT varID,VARIANT *pvarRole) {
    return This->lpVtbl->get_accRole(This,varID,pvarRole);
}
static FORCEINLINE HRESULT IAccessible2_3_get_accState(IAccessible2_3* This,VARIANT varID,VARIANT *pvarState) {
    return This->lpVtbl->get_accState(This,varID,pvarState);
}
static FORCEINLINE HRESULT IAccessible2_3_get_accHelp(IAccessible2_3* This,VARIANT varID,BSTR *pszHelp) {
    return This->lpVtbl->get_accHelp(This,varID,pszHelp);
}
static FORCEINLINE HRESULT IAccessible2_3_get_accHelpTopic(IAccessible2_3* This,BSTR *pszHelpFile,VARIANT varID,LONG *pidTopic) {
    return This->lpVtbl->get_accHelpTopic(This,pszHelpFile,varID,pidTopic);
}
static FORCEINLINE HRESULT IAccessible2_3_get_accKeyboardShortcut(IAccessible2_3* This,VARIANT varID,BSTR *pszKeyboardShortcut) {
    return This->lpVtbl->get_accKeyboardShortcut(This,varID,pszKeyboardShortcut);
}
static FORCEINLINE HRESULT IAccessible2_3_get_accFocus(IAccessible2_3* This,VARIANT *pvarID) {
    return This->lpVtbl->get_accFocus(This,pvarID);
}
static FORCEINLINE HRESULT IAccessible2_3_get_accSelection(IAccessible2_3* This,VARIANT *pvarID) {
    return This->lpVtbl->get_accSelection(This,pvarID);
}
static FORCEINLINE HRESULT IAccessible2_3_get_accDefaultAction(IAccessible2_3* This,VARIANT varID,BSTR *pszDefaultAction) {
    return This->lpVtbl->get_accDefaultAction(This,varID,pszDefaultAction);
}
static FORCEINLINE HRESULT IAccessible2_3_accSelect(IAccessible2_3* This,LONG flagsSelect,VARIANT varID) {
    return This->lpVtbl->accSelect(This,flagsSelect,varID);
}
static FORCEINLINE HRESULT IAccessible2_3_accLocation(IAccessible2_3* This,LONG *pxLeft,LONG *pyTop,LONG *pcxWidth,LONG *pcyHeight,VARIANT varID) {
    return This->lpVtbl->accLocation(This,pxLeft,pyTop,pcxWidth,pcyHeight,varID);
}
static FORCEINLINE HRESULT IAccessible2_3_accNavigate(IAccessible2_3* This,LONG navDir,VARIANT varStart,VARIANT *pvarEnd) {
    return This->lpVtbl->accNavigate(This,navDir,varStart,pvarEnd);
}
static FORCEINLINE HRESULT IAccessible2_3_accHitTest(IAccessible2_3* This,LONG xLeft,LONG yTop,VARIANT *pvarID) {
    return This->lpVtbl->accHitTest(This,xLeft,yTop,pvarID);
}
static FORCEINLINE HRESULT IAccessible2_3_accDoDefaultAction(IAccessible2_3* This,VARIANT varID) {
    return This->lpVtbl->accDoDefaultAction(This,varID);
}
static FORCEINLINE HRESULT IAccessible2_3_put_accName(IAccessible2_3* This,VARIANT varID,BSTR pszName) {
    return This->lpVtbl->put_accName(This,varID,pszName);
}
static FORCEINLINE HRESULT IAccessible2_3_put_accValue(IAccessible2_3* This,VARIANT varID,BSTR pszValue) {
    return This->lpVtbl->put_accValue(This,varID,pszValue);
}
/*** IAccessible2 methods ***/
static FORCEINLINE HRESULT IAccessible2_3_get_nRelations(IAccessible2_3* This,LONG *nRelations) {
    return This->lpVtbl->get_nRelations(This,nRelations);
}
static FORCEINLINE HRESULT IAccessible2_3_get_relation(IAccessible2_3* This,LONG relationIndex,IAccessibleRelation **relation) {
    return This->lpVtbl->get_relation(This,relationIndex,relation);
}
static FORCEINLINE HRESULT IAccessible2_3_get_relations(IAccessible2_3* This,LONG maxRelations,IAccessibleRelation **relations,LONG *nRelations) {
    return This->lpVtbl->get_relations(This,maxRelations,relations,nRelations);
}
static FORCEINLINE HRESULT IAccessible2_3_role(IAccessible2_3* This,LONG *role) {
    return This->lpVtbl->role(This,role);
}
static FORCEINLINE HRESULT IAccessible2_3_scrollTo(IAccessible2_3* This,enum IA2ScrollType scrollType) {
    return This->lpVtbl->scrollTo(This,scrollType);
}
static FORCEINLINE HRESULT IAccessible2_3_scrollToPoint(IAccessible2_3* This,enum IA2CoordinateType coordinateType,LONG x,LONG y) {
    return This->lpVtbl->scrollToPoint(This,coordinateType,x,y);
}
static FORCEINLINE HRESULT IAccessible2_3_get_groupPosition(IAccessible2_3* This,LONG *groupLevel,LONG *similarItemsInGroup,LONG *positionInGroup) {
    return This->lpVtbl->get_groupPosition(This,groupLevel,similarItemsInGroup,positionInGroup);
}
static FORCEINLINE HRESULT IAccessible2_3_get_states(IAccessible2_3* This,AccessibleStates *states) {
    return This->lpVtbl->get_states(This,states);
}
static FORCEINLINE HRESULT IAccessible2_3_get_extendedRole(IAccessible2_3* This,BSTR *extendedRole) {
    return This->lpVtbl->get_extendedRole(This,extendedRole);
}
static FORCEINLINE HRESULT IAccessible2_3_get_localizedExtendedRole(IAccessible2_3* This,BSTR *localizedExtendedRole) {
    return This->lpVtbl->get_localizedExtendedRole(This,localizedExtendedRole);
}
static FORCEINLINE HRESULT IAccessible2_3_get_nExtendedStates(IAccessible2_3* This,LONG *nExtendedStates) {
    return This->lpVtbl->get_nExtendedStates(This,nExtendedStates);
}
static FORCEINLINE HRESULT IAccessible2_3_get_extendedStates(IAccessible2_3* This,LONG maxExtendedStates,BSTR **extendedStates,LONG *nExtendedStates) {
    return This->lpVtbl->get_extendedStates(This,maxExtendedStates,extendedStates,nExtendedStates);
}
static FORCEINLINE HRESULT IAccessible2_3_get_localizedExtendedStates(IAccessible2_3* This,LONG maxLocalizedExtendedStates,BSTR **localizedExtendedStates,LONG *nLocalizedExtendedStates) {
    return This->lpVtbl->get_localizedExtendedStates(This,maxLocalizedExtendedStates,localizedExtendedStates,nLocalizedExtendedStates);
}
static FORCEINLINE HRESULT IAccessible2_3_get_uniqueID(IAccessible2_3* This,LONG *uniqueID) {
    return This->lpVtbl->get_uniqueID(This,uniqueID);
}
static FORCEINLINE HRESULT IAccessible2_3_get_windowHandle(IAccessible2_3* This,HWND *windowHandle) {
    return This->lpVtbl->get_windowHandle(This,windowHandle);
}
static FORCEINLINE HRESULT IAccessible2_3_get_indexInParent(IAccessible2_3* This,LONG *indexInParent) {
    return This->lpVtbl->get_indexInParent(This,indexInParent);
}
static FORCEINLINE HRESULT IAccessible2_3_get_locale(IAccessible2_3* This,IA2Locale *locale) {
    return This->lpVtbl->get_locale(This,locale);
}
static FORCEINLINE HRESULT IAccessible2_3_get_attributes(IAccessible2_3* This,BSTR *attributes) {
    return This->lpVtbl->get_attributes(This,attributes);
}
/*** IAccessible2_2 methods ***/
static FORCEINLINE HRESULT IAccessible2_3_get_attribute(IAccessible2_3* This,BSTR name,VARIANT *attribute) {
    return This->lpVtbl->get_attribute(This,name,attribute);
}
static FORCEINLINE HRESULT IAccessible2_3_get_accessibleWithCaret(IAccessible2_3* This,IUnknown **accessible,LONG *caretOffset) {
    return This->lpVtbl->get_accessibleWithCaret(This,accessible,caretOffset);
}
static FORCEINLINE HRESULT IAccessible2_3_get_relationTargetsOfType(IAccessible2_3* This,BSTR type,LONG maxTargets,IUnknown ***targets,LONG *nTargets) {
    return This->lpVtbl->get_relationTargetsOfType(This,type,maxTargets,targets,nTargets);
}
/*** IAccessible2_3 methods ***/
static FORCEINLINE HRESULT IAccessible2_3_get_selectionRanges(IAccessible2_3* This,IA2Range **ranges,LONG *nRanges) {
    return This->lpVtbl->get_selectionRanges(This,ranges,nRanges);
}
#endif
#endif

#endif


#endif  /* __IAccessible2_3_INTERFACE_DEFINED__ */

/* Begin additional prototypes for all interfaces */


/* End additional prototypes */

#ifdef __cplusplus
}
#endif

#endif /* __accessible2_3_h__ */
